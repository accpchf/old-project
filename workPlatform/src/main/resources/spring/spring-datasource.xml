<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd"
	default-lazy-init="true">
	
	<!-- 开启AOP监听 只对当前配置文件有效 -->
	<aop:aspectj-autoproxy expose-proxy="true" />

	<!-- 扫描base-package包下所有标注@Repository的组件 -->
	<context:component-scan base-package="com.zdksii.pms.wp.dao.impl" />

	<!-- 配置Hibernate的SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 扫描基于JPA注解POJO类 -->
		<property name="packagesToScan">
			<list>
				<value>com.zdksii.pms.wp.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
			</props>
		</property>
	</bean>

	<!-- 配置数据源 -->
	<!-- 正式生产环境 -->
	<beans profile="production">
		<context:property-placeholder
			ignore-unresolvable="true" location="classpath:properties/jdbc/jdbc.prd.properties,classpath:properties/config/wp.production.properties" />
		<!-- Druid 连接池 -->
		<!-- 参考 https://github.com/alibaba/druid/wiki/%E9%A6%96%E9%A1%B5 -->
		<!-- 通常来说，只需要修改initialSize、minIdle、maxActive。如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 基本属性 url、user、password -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="10" />
			<property name="minIdle" value="10" />
			<property name="maxActive" value="50" />
			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />
			<property name="validationQuery" value="SELECT 'x'" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
			<property name="poolPreparedStatements" value="false" />
			<property name="maxPoolPreparedStatementPerConnectionSize"
				value="20" />
			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="wall,stat" />
		</bean>
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" 
			/> -->
		<!-- 读取属性文件 -->
		<bean id="propertyConfigurer" class="com.zdksii.pms.common.util.ReadPropertiesUtil">
			<property name="ignoreResourceNotFound" value="true" />
			<property name="fileEncoding" value="utf-8" />
			<property name="locations">
				<list>
					<value>classpath:properties/common/common.properties</value>
					<value>classpath:properties/common/messages.properties</value>
					<value>classpath:properties/config/wp.production.properties</value>
				</list>
			</property>
		</bean>
	</beans>

	<!-- 本地开发环境 -->
	<beans profile="development">
		<context:property-placeholder
			ignore-resource-not-found="true" ignore-unresolvable="true"
			location="classpath:properties/jdbc/jdbc.dev.properties,classpath:properties/config/wp.dev.properties" />
		<!-- Tomcat JDBC连接池 -->
		<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="10" /><!-- default 100 -->
			<property name="maxIdle" value="10" />
			<property name="minIdle" value="0" />
			<property name="initialSize" value="1" /><!-- default 10 -->
			<property name="maxWait" value="60" /><!-- default 30 sec -->

			<property name="timeBetweenEvictionRunsMillis" value="3000" /><!--default 5 sec -->
			<property name="minEvictableIdleTimeMillis" value="300000" /><!-- default 60 sec -->
			<property name="validationQuery" value="SELECT 1" /><!-- oracle: select 1 from dual -->
			<property name="testWhileIdle" value="false" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<property name="defaultAutoCommit" value="false" />
		</bean>
		<!-- 读取属性文件 -->
		<bean id="propertyConfigurer" class="com.zdksii.pms.common.util.ReadPropertiesUtil">
			<property name="ignoreResourceNotFound" value="true" />
			<property name="fileEncoding" value="utf-8" />
			<property name="locations">
				<list>
					<value>classpath:properties/common/common.properties</value>
					<value>classpath:properties/common/messages.properties</value>
					<value>classpath:properties/config/wp.dev.properties</value>
				</list>
			</property>
		</bean>
	</beans>

	<!-- 功能测试 环境 -->
	<beans profile="functional_test">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath:properties/jdbc/jdbc.functional.test.properties,classpath:properties/config/wp.functional_test.properties" />
		<!-- Druid 连接池 -->
		<!-- 参考 https://github.com/alibaba/druid/wiki/%E9%A6%96%E9%A1%B5 -->
		<!-- 通常来说，只需要修改initialSize、minIdle、maxActive。如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。 -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<!-- 基本属性 url、user、password -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			<!-- 配置初始化大小、最小、最大 -->
			<property name="initialSize" value="10" />
			<property name="minIdle" value="10" />
			<property name="maxActive" value="50" />
			<!-- 配置获取连接等待超时的时间 -->
			<property name="maxWait" value="60000" />
			<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
			<property name="minEvictableIdleTimeMillis" value="300000" />
			<property name="validationQuery" value="SELECT 'x'" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
			<property name="poolPreparedStatements" value="false" />
			<property name="maxPoolPreparedStatementPerConnectionSize"
				value="20" />
			<!-- 配置监控统计拦截的filters -->
			<property name="filters" value="wall,stat" />
		</bean>
		<!-- 读取属性文件 -->
		<bean id="propertyConfigurer" class="com.zdksii.pms.common.util.ReadPropertiesUtil">
			<property name="ignoreResourceNotFound" value="true" />
			<property name="fileEncoding" value="utf-8" />
			<property name="locations">
				<list>
					<value>classpath:properties/common/common.properties</value>
					<value>classpath:properties/common/messages.properties</value>
					<value>classpath:properties/config/wp.functional_test.properties</value>
				</list>
			</property>
		</bean>
	</beans>

	<!--单元测试环境 -->
	<beans profile="unit_test">
		<context:property-placeholder
			ignore-resource-not-found="true"
			location="classpath:properties/jdbc/jdbc.unit.test.properties,classpath:properties/config/wp.unit_test.properties" />

		<!-- Spring Simple连接池 -->
		<bean id="dataSource"
			class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>
		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<property name="dataSource" ref="dataSource" />
		</bean>
		<!-- 初始化数据表结构 与默认数据 -->
		<!-- <jdbc:initialize-database data-source="dataSource" ignore-failures="ALL"> 
			<jdbc:script location="classpath:sql/h2/schema.sql" /> <jdbc:script location="classpath:data/h2/import-data.sql" 
			encoding="UTF-8"/> </jdbc:initialize-database> -->
			
		<!-- 读取属性文件 -->
		<bean id="propertyConfigurer" class="com.zdksii.pms.common.util.ReadPropertiesUtil">
			<property name="ignoreResourceNotFound" value="true" />
			<property name="fileEncoding" value="utf-8" />
			<property name="locations">
				<list>
					<value>classpath:properties/common/common.properties</value>
					<value>classpath:properties/common/messages.properties</value>
					<value>classpath:properties/config/wp.unit_test.properties</value>
				</list>
			</property>
		</bean> 
	</beans>
</beans>